"""
Django settings for qbsy project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'o-6-8^#vacg-4@2a2)@0ydrrynhslc(a)4r+x_g#r=jjqq!xzt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'base',
    'info',
    'xadmin',
    'student',
    'teacher',
    'exam'
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'qbsy.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'qbsy.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
if os.path.exists(os.path.join(BASE_DIR, 'usemysql')):
    print 'Use MySQL DataBase...'
    rs = (open(os.path.join(BASE_DIR, 'usemysql')).read() or '').strip().split(' ')
    host = '127.0.0.1'
    name = 'tkldb'
    user = 'root'
    pwd = 'root123'
    if len(rs) == 3:
        name = rs[0]
        user = rs[1]
        pwd = rs[2]
    if len(rs) == 4:
        host = rs[0]
        name = rs[1]
        user = rs[2]
        pwd = rs[3]
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': name,
            'USER':user,
            'PASSWORD':pwd,
            'HOST':host,
            'PORT':'3306',
            'OPTIONS': {'charset': 'utf8mb4'},
        }
    }


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/media/'

STATICFILES_DIRS = (
                    os.path.join(BASE_DIR, 'static'),
                    os.path.join(BASE_DIR, 'media'),
                    )

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# TEMPLATE_DIRS = (
#                  os.path.join(BASE_DIR, 'templates'),
#                  )

TEMPLATE_BASE_DIR = os.path.join(BASE_DIR, 'templates')

DEFAULT_FILE_STORAGE = 'third.DateTimeFileStorage'

SESSION_COOKIE_NAME = "icollegesid"

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console':{
            'level':'DEBUG',
            'class':'logging.StreamHandler',
        },
    },
    'loggers': {
#         'django.db.backends': {
#             'handlers': ['console'],
#             'propagate': True,
#             'level':'DEBUG',
#         },
        'django.request': {
            'handlers': ['console'],
            'propagate': True,
            'level':'DEBUG',
        },
    }
}
